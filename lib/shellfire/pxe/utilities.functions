# This file is part of pxe. It is subject to the licence terms in the COPYRIGHT file found in the top-level directory of this distribution and at https://raw.githubusercontent.com/lemonrock/pxe/master/COPYRIGHT. No part of pxe, including this file, may be copied, modified, propagated, or distributed except according to the terms contained in the COPYRIGHT file.
# Copyright Â© 2014-2015 The developers of pxe. See the COPYRIGHT file in the top-level directory of this distribution and at https://raw.githubusercontent.com/lemonrock/pxe/master/COPYRIGHT.


core_dependency_requires '*' env
pxe_utilities_runLongLived()
{
	env -i PATH="/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin" LC_ALL="en_US.UTF-8" "$@"
}

core_dependency_requires '*' head rm
pxe_utilities_signal()
{
	local program="$1"
	local signal="$2"
	local removePidFile="$3"
	
	local pidFilePath="$_program_varPath"/run/"$program".pid
	
	if ! core_path_isReadableNonEmptyFilePath "$pidFilePath"; then
		core_exitError $core_commandLine_exitCode_NOINPUT "There is no $program pid file at '$pidFilePath'"
	fi
	
	local pid="$(head -n 1 "$pidFilePath")"
	set +e
	kill -"$signal" "$pid"
	local exitCode=$?
	set -e
	
	if [ $exitCode -ne 0 ]; then
		core_exitError $core_commandLine_exitCode_CONFIG "Could not send signal '$signal' to $program at pid '$pid' from pid file '$pidFilePath'"
	fi
	
	if $removePidFile; then
		rm -rf "$pidFilePath"
	fi
}

pxe_utilities_pidFilePath()
{
	local programName="$1"
	printf '%s' "$_program_varPath"/run/"$programName".pid
}

pxe_utilities_exitIfAlreadyRunning()
{
	local programName="$1"
	local pidFilePath="$(pxe_utilities_pidFilePath "$programName")"
	if core_path_isReadableNonEmptyFilePath "$pidFilePath"; then
		local programPid="$(head -n 1 "$pidFilePath")"
		# trailing space is delivebate
		if ps -o pid,comm | tail -n +2 | grep -q "${programPid} "; then
			core_message WARN "$programName already running as pid '$programPid'; stop with  kill -9 $programPid && rm -rf ${pidFilePath}"
		fi
	fi
}

core_dependency_requires '*' head ps tail grep rm sleep awk
pxe_utilities_start()
{
	local programName="$1"
	shift 1
	
	pxe_utilities_pidFilePath "$programName"
	
	local pidFilePath="$(pxe_utilities_pidFilePath "$programName")"
	rm -rf "$pidFilePath"
	
	pxe_utilities_runLongLived "$programName" "$@"
	sleep 1
	
	# Trailing space in grep is deliberate
	local programPid="$(ps -o comm,pid | tail -n +2 | grep "^${programName} " | awk '{print $2}')"
	if [ -z "$programPid" ]; then
		core_exitError $core_commandLine_exitCode_SOFTWARE "$programName did not start"
	fi
	
	printf '%s' "$programPid" >"$pidFilePath"
	core_message INFO "$programName is running as PID '$programPid'"
}
